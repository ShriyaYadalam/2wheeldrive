<?xml version="1.0"?>
<robot name="amr" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:property name = "base_radius" value = "0.175"/>  
<xacro:property name = "base_height" value = "0.22"/>

<xacro:property name = "wheel_radius" value = "0.03"/> 
<xacro:property name = "wheel_width" value = "0.03"/> 

<xacro:property name = "caster_radius" value = "0.03"/>   

<xacro:property name="wheel_ygap" value="0.025"/>
<xacro:property name="wheel_zoff" value="0.03"/> 
<xacro:property name="wheel_xoff" value="0.0"/> 
<xacro:property name="caster_xoff" value="0.14"/>

  <xacro:macro name="wheel_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="base_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r"> 
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>


<link name = "base_link"> 
    <visual> 
        <geometry>
            <cylinder radius = "${base_radius}" length = "${base_height}"/>
        </geometry>
        <material name = "Red">
            <color rgba = "1.0 0 0 1.0"/>
        </material>  
    </visual>
    <collision>
      <geometry>
        <cylinder radius = "${base_radius}" length = "${base_height}"/>
      </geometry> 
    </collision>
</link>

<link name = "base_footprint"> 
    <xacro:base_inertia m="4" r="${base_radius}" h="${base_height}"/>
</link>
 
<joint name = "base_joint" type = "fixed">
    <parent link = "base_link"/>
    <child link = "base_footprint"/> 
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
</joint>




<xacro:macro name = "wheel" params = "prefix x_reflect y_reflect"> 
    <link name = "${prefix}_link">
        <visual>
            <origin xyz = "0 0 0" rpy = "${pi/2} 0 0"/> 
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_width}"/>
            </geometry>
            <material name = "Gray">
                <color rgba = "0.367 0.5 0.5 1.0"/>
            </material> 
        </visual> 
 
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>  
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision> 
      <xacro:base_inertia m="0.365" r="${wheel_radius}" h="${wheel_width}"/>

    </link>

    <joint name = "${prefix}_joint" type = "continuous"> 
        <parent link = "base_link"/>
        <child link = "${prefix}_link"/>
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_radius+wheel_ygap)} ${-base_height/2 - wheel_radius}" rpy="0 0 0"/>
        <axis xyz = "0 1 0"/>
    </joint>
</xacro:macro>

<xacro:wheel prefix = "drive_l" x_reflect = "-1" y_reflect = "1"/>
<xacro:wheel prefix = "drive_r" x_reflect = "-1" y_reflect = "-1"/>




<xacro:macro name="caster" params="prefix x_pos y_pos">
    <link name="${prefix}_link">  
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/> 
        <geometry>
          <sphere radius = "${caster_radius}"/>
        </geometry>
        <material name="Black">
          <color rgba="0.1 0.1 0.1 1.0"/>  
        </material>
      </visual>
      
   <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.0342" r="${caster_radius}"/>


    </link>  

    <joint name="${prefix}_swivel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_pos} ${y_pos} ${-(base_height / 2) - caster_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>  
  </xacro:macro>  

<xacro:caster prefix="caster_front" x_pos="${base_radius - caster_radius}" y_pos="0"/>
<xacro:caster prefix="caster_back" x_pos="${-base_radius + caster_radius}" y_pos="0"/>


<gazebo>
  <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
    <ros>
      <namespace>/demo</namespace>
    </ros>

    <left_joint>drive_l_joint</left_joint>
    <right_joint>drive_r_joint</right_joint>

    <wheel_separation>0.35</wheel_separation> 
    <wheel_diameter>0.12</wheel_diameter>

    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf> <!--true--> <!-- EKF publishes this main odom-> baselink TF-->
    <publish_wheel_tf>true</publish_wheel_tf> <!--true-->

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>



<link name="lidar_link">
  <visual>
    <geometry>
      <cylinder length="0.05" radius="0.03"/>
    </geometry>
    <material name = "Cyan">
    <color rgba = "0 1 1 1"/>
    </material>
  </visual>
  <collision>
    <geometry>
      <cylinder length="0.05" radius="0.03"/>
    </geometry>
  </collision>
  <inertial>
    <mass value="0.1"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1e-5" ixy="0" ixz="0" iyy="1e-5" iyz="0" izz="1e-5"/>
  </inertial>
</link>

<joint name="lidar_joint" type="fixed">
  <parent link="base_link"/>
  <child link="lidar_link"/>
  <origin xyz="0 0 0.15" rpy="0 0 0"/>
</joint> 

<gazebo reference="lidar_link">
  <sensor name="laser" type="ray">
    <pose>0 0 0 0 0 0</pose>  
    <!-- <always_on>true</always_on> -->
    <update_rate>20</update_rate>
    <visualize>true</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-3.1415926</min_angle>
          <max_angle>3.1415926</max_angle>
        </horizontal> 
      </scan>
      <range>
        <min>0.15</min>
        <max>12.0</max>
        <resolution>0.01</resolution>  
      </range>   
     <!-- <noise>   
        <type>gaussian</type>  
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise> -->
    </ray> 
    <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <!-- <namespace>/demo</namespace> --> 
        <remapping>~/out:=scan</remapping>
        <!-- <topicName>scan</topicName>  -->
      </ros> 
      <output_type>sensor_msgs/LaserScan</output_type>      
      <frame_name>lidar_link</frame_name>
    </plugin>   
  </sensor>
</gazebo> 
 



</robot> 
